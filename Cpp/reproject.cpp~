Mat_<double>& reproject( Mat_<double>& src
                         Mat_<double>& cameraMatrix,
                         Mat_<double>& cameraAffinePoseBase,
                         Mat_<double>& cameraAffinePoseAlternate,
                         d){
           
           Mat_<double> cA_Apln(Mat_<double>(3,4) << d*cameraMatrix.inv() << 0,0,1);
           Mat_<double> cW_A;
           invertAffineTransform(cameraAffinePoseAlternate,cW_A);
           Mat_<double> & cB_W=cameraAffinePoseBase;
           Mat_<double> & cBpln_B;
           hconcat(cameraMatrix,(Mat_<double>(3,1) << 0,0,0), cBpln_B);
           Mat_<double> cBpln_Apln=cBpln_B*cB_W*cW_A*cA_Apln;
           Mat_<double> dst;
           warpPerspective(src, dst, cBpln_Apln, src.size());
           return dst;
}
